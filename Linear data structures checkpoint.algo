ALGORITHM arrays_distinct_overlapping_elements
VAR
    T1, T2 : ARRAY_OF INTEGER[100];
    sum_distinct, sum_overlapping : INTEGER;
    N1, N2, i, j, p : INTEGER;
BEGIN
    // reading the size of each array
    Write("type the length of the first array"); 
    REPEAT
        Write("N1 = ");
        Read(N1);
    UNTIL (N1>0 AND N1<=100)
    Write("type the length of the second array");
    REPEAT
        Write("N2 = ");
        Read(N2);
    UNTIL (N2>0 AND N2<=100)
    i := 0;
    // reading the elements of each array
    Write("type the elemnts of the first array (make sure that each element is unique within the array)");
    FOR i FROM 0 TO N1-1 STEP 1 DO
        Read(T1[i]);
    END_FOR
    i := 0;
    Write("type the elemnts of the second array (make sure that each element is unique within the array)");
    FOR i FROM 0 TO N2-1 STEP 1 DO
        Read(T2[i]);
    END_FOR
    // sum of distinct elements
    sum_distinct := 0;
    i := 0; j := 0; 
    FOR i FROM 0 TO N1-1 STEP 1 DO
        p := -1;
        FOR j FROM 0 TO N2-1 STEP 1  DO
            IF (T1[i]=T2[j]) THEN
                p := i;
            END_IF
        END_FOR
        IF (p=-1) THEN
            sum_distinct := sum_distinct + T1[i];
        END_IF
    END_FOR
    i := 0; j := 0;
    FOR i FROM 0 TO N2-1 STEP 1 DO
        p := -1;
        FOR j FROM 0 TO N1-1 STEP 1 DO
            IF (T2[i]=T1[j]) THEN
                p := i;
            END_IF
        END_FOR
        IF (p=-1) THEN
            sum_distinct := sum_distinct + T2[i];
        END_IF
    END_FOR
    // sum of overlapping elements
    sum_overlapping := 0;
    i := 0; j := 0;
    FOR i FROM 0 TO N1-1 STEP 1 DO
        FOR j FROM 0 TO N2-1 STEP 1 DO
            IF (T1[i]=T2[j]) THEN
                sum_overlapping := sum_overlapping + (T1[i]*2);
            END_IF
        END_FOR
    END_FOR
END

/* voici l'implÃ©mentation de cet algorithme en JavaScript
https://pastebin.com/UzWw3SMf  */